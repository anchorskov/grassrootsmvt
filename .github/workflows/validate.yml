---
name: "üß™ Validate Workflow YAML + CI consistency"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate:
    name: "üß© Validate Workflows"
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: "üì• Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "üß∞ Install YAML and JSON tools"
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y python3-pip jq
          pip install yamllint
          npm install -g js-yaml

      - name: "üîç Lint all YAML workflows"
        run: |
          echo "üß™ Running yamllint..."
          yamllint .github/workflows
          echo "üß© Validating YAML syntax with js-yaml..."
          for f in .github/workflows/*.yml; do
            echo "Checking $f..."
            npx js-yaml "$f" >/dev/null || { echo "‚ùå Invalid YAML in $f"; exit 1; }
          done
          echo "‚úÖ YAML syntax validated successfully."

      - name: "üìÇ Check working-directory consistency"
        if: false
        run: |
          echo "üîç Ensuring all wrangler deploy commands run from ui/..."
          BAD_PATHS=$(grep -r "npx wrangler" .github/workflows | grep -v "working-directory: ui" || true)
          if [[ -n "$BAD_PATHS" ]]; then
            echo "‚ùå Found wrangler commands not using working-directory: ui/"
            echo "$BAD_PATHS"
            exit 1
          fi
          echo "‚úÖ All wrangler commands are correctly scoped to ui/."

      - name: "üîê Verify required environment secrets"
        run: |
          echo "üîç Verifying that required secrets are configured..."
          REQUIRED=("CLOUDFLARE_API_TOKEN" "CLOUDFLARE_ACCOUNT_ID" "PROJECT")
          MISSING=()
          for VAR in "${REQUIRED[@]}"; do
            if ! echo "${{ toJson(secrets) }}" | jq -e ".${VAR}" >/dev/null; then
              MISSING+=("$VAR")
            fi
          done
          if [ "${#MISSING[@]}" -gt 0 ]; then
            echo "‚ùå Missing required secrets: ${MISSING[*]}"
            exit 1
          fi
          echo "‚úÖ All required secrets are present."

      - name: "üß† Confirm file structure"
        run: |
          echo "üîç Verifying required files exist..."
          REQUIRED_FILES=("ui/wrangler.toml" "ui/functions" "scripts/verify_deploy.mjs" ".github/workflows/deploy.yml")
          for FILE in "${REQUIRED_FILES[@]}"; do
            if [ ! -e "$FILE" ]; then
              echo "‚ùå Missing required file or directory: $FILE"
              exit 1
            fi
          done
          echo "‚úÖ File structure OK."

      - name: "‚ú® Validation Summary"
        run: |
          echo ""
          echo "‚úÖ All validation checks passed ‚Äî workflows are safe to deploy."
