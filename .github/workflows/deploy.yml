name: Deploy Pages (build + verify functions)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build Pages Functions (wrangler)
        run: |
          npx wrangler@4.42.0 pages functions build ./ui/functions --outdir ui/.wrangler
      - name: Verify local functions bundle exists
        run: |
          if [ ! -d "ui/.wrangler" ]; then
            echo "❌ No functions bundle detected (ui/.wrangler missing). Aborting.";
            ls -R ui || true;
            exit 1;
          fi
          echo "✅ Local functions bundle present"
      - name: Deploy to Cloudflare Pages
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          npx wrangler@4.42.0 pages deploy ./ui --project-name=grassrootsmvt --commit-dirty=true
      - name: Verify deployment includes functions via Cloudflare API
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          PROJECT: grassrootsmvt
        run: |
          # Query most recent deployment and assert uses_functions == true
          DEP_JSON=$(curl -sS -H "Authorization: Bearer $CF_API_TOKEN" \
            "https://api.cloudflare.com/client/v4/accounts/$ACCOUNT_ID/pages/projects/$PROJECT/deployments?per_page=1")
          echo "$DEP_JSON" | jq '.result[0] | {id: .id, created_on: .created_on, uses_functions: .uses_functions, artifacts: .artifacts}'
          USES=$(echo "$DEP_JSON" | jq -r '.result[0].uses_functions')
          if [ "$USES" != "true" ]; then
            echo "❌ Deployment does not include a Functions bundle (uses_functions=$USES). Dumping deployment JSON for debugging:";
            echo "$DEP_JSON" | jq . || echo "$DEP_JSON";
            exit 1;
          fi
          echo "✅ Deployment includes Functions (uses_functions=true)"
